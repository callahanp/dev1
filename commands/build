#!/bin/bash


# echo "cd $(pwd)"
# echo "${BASH_SOURCE[0]})" "$@"
source "$DEV1_COMMANDS_PATH/utils/utilityFunctions"

if [[ "$1" != "" ]]; then
  source "$DEV1_COMMANDS_PATH/context" "$1" "$2" "$3"
fi
if [[ "$?" == "1" ]]; then 
echo "DEV1 Error: Unable to resolve context"; return 1; fi
echo "$0"
echo "\$@:" "$@"
if [[ "$DEV1_SUITE_PATH" == "$DEV1_SUITES_PATH/$1" ]]; then
  shift
fi
if [[ "$DEV1_TASK_PATH" == "$DEV1_SUITE_PATH/tasks/$1" ]]; then
  shift
fi
if [[ "${DEV1_VARIANT_NAME,,}" == "${1,,}" ]]; then
  shift
fi

build1="$DEV1_TASK_PATH/build.bash"
build2="$DEV1_SUITE_PATH/project/build.bash"

if [[ -e "$build1" ]]; then
  buildScript=$build1
elif [[ -e "$build2" ]]; then
  buildScript="$build2"
else
  echo "Could not find build.bash in either of"
  echo "    $build1"
  echo " or $build2"
  echo "you need to provide one"
  return 1
fi

# shellcheck disable=SC1090
# shellcheck disable=SC2086
# shellcheck disable=SC2068
LogAction source $buildScript "context-is-set"
# shellcheck disable=SC1090
# shellcheck disable=SC2086
# shellcheck disable=SC2068
source $buildScript "context-is-set"
PrintActionLog




