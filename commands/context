#!/bin/bash
#
# dev1
# Dev1's operations, ide, build and run depend on
# the settings for suite, task, code_workspace and cMakeBuildType
# Together, these four determine the values for a number of
# environment variables set at the end of
#
# ide requires suite, task & code-workspace names
# build requires suite, task, cMakeBuildType, build options/parameters
# run requires suite, task, cMakeBuildType, run options/parameters.
#

# Values for suite, task, code-workspace and cMakeBuildType are determined
# from
# - parameters given to commands
# - saved environment variable values

declare -g _suitesPath
declare -g _suiteName
declare -g _suitePath
declare -g _projectPath
declare -g _repositories
declare -g _worktrees
declare -g _tasksPath

declare -g _taskName
declare -g _taskPath

function resolveCMakeBuildType(){

  cMakeBuildTypes=("Release" "Debug" "RelWithDebInfo" "MinSizeRel")
  # shellcheck disable=SC2206
  lowerCasecMakeBuildTypes=(${cMakeBuildTypes[@],,})
  v=$1; v=${v,,}
  if [[ "$v" != "" ]]; then
    for (( iv=0; iv<${#cMakeBuildTypes[@]}; iv++ )); do
      if [[ "$v" == "${lowerCasecMakeBuildTypes[$iv]}" ]]; then
      _cMakeBuildType="${cMakeBuildTypes[$iv]}"
      fi
    done
  fi
  return 0
}
#echo "--------------------- Starting Context ---------------------"


declare -g _suitesPath
declare -g _suiteName
declare -g _suitePath
declare -g _projectPath
declare -g _repositoriesPath
declare -g _worktreesPath
declare -g _tasksPath
declare -g _buildsPath
if [[ "$1" != "" ]]; then
  _suiteName="$1"

elif [[ -e $DEV1_SUITES_PATH/currentSuiteName ]]; then
  _suiteName=$(cat $DEV1_SUITES_PATH/curren.suite.name)
fi
if [[ "$_suiteName" == "" ]]; then
  return 1
fi
source "$DEV1_COMMANDS_PATH/contextSuite" "$_suiteName"
shift
echo "_tasksPath: $_tasksPath"
echo "_worktreesPath: $_worktreesPath"
resolveCMakeBuildType "$1"

declare -g _taskName
declare -g _taskPath
if [[ "$1" != "" ]]; then
  _taskName="$1"
elif [[ -e $_suitePath/currentTaskName ]]; then
  _taskName=$(cat $_suitePath/current.task.name)
fi
if [[ "$_taskName" == "" ]]; then
  return 1
fi
source "$DEV1_COMMANDS_PATH/contextTask" "$_taskName"

if [[ "$_taskName" == "$1" ]]; then
  shift
fi
resolveCMakeBuildType "$1"
if [[ "$_cMakeBuildType" == "$1" ]]; then
  shift
fi

source "$DEV1_COMMANDS_PATH/contextCodeWorkspace" "$1"
shift
resolveCMakeBuildType "$1"
if [[ "$_cMakeBuildType" == "$1" ]]; then
  shift
fi

_buildPath="$_suitePath/builds/$_taskName.$_cMakeBuildType"
_codeWorkspacePath="$_taskPath/$_suiteName.$_taskName.code-workspace"

if [[ "$_cMakeBuildType" == "" ]]; then
  _cMakeBuildType="Debug"
fi


export DEV1_SUITE_NAME="$_suiteName"
export DEV1_SUITE_PATH="$_suitePath"
export DEV1_TASK_NAME="$_taskName"
export DEV1_CMAKE_BUILD_TYPE="$_cMakeBuildType"
export DEV1_TASKS_PATH="$DEV1_SUITE_PATH/tasks"
export DEV1_TASK_PATH="$DEV1_TASKS_PATH/$DEV1_TASK_NAME"
if [[ -f  $_codeWorkspacePath ]]; then
  export DEV1_CODE_WORKSPACE_PATH="$_codeWorkspacePath"
elif [[ -f  "$DEV1_TASK_PATH/$DEV1_SUITE_NAME.$DEV1_TASK_NAME.code-workspace" ]]; then
  export DEV1_CODE_WORKSPACE_PATH="$DEV1_TASK_PATH/$DEV1_SUITE_NAME.$DEV1_TASK_NAME.code-workspace"
elif [[ -f  "$DEV1_TASK_PATH/$DEV1_SUITE_NAME.$DEV1_TASK_NAME.code-workspace" ]]; then
  export DEV1_CODE_WORKSPACE_PATH="$DEV1_TASK_PATH/$DEV1_SUITE_NAME.$DEV1_TASK_NAME.code-workspace"
else
  export DEV1_CODE_WORKSPATH=""
fi
export codeWorkspacePath="$DEV1_CODE_WORKSPATH"
export DEV1_BUILDS_PATH="$_buildsPath"
export DEV1_WORKTREES_PATH="$_worktreesPath"
export DEV1_REPOSITORIES_PATH="$_repositoriesPath"
export DEV1_TASKS_PATH="$_tasksPath"
export DEV1_PROJECT_PATH="$_projectPath"

export DEV1_BUILD_PATH=$DEV1_BUILDS_PATH/$DEV1_TASK_NAME.$DEV1_CMAKE_BUILD_TYPE
export DEV1_TASK_PATH=$DEV1_TASKS_PATH/$_taskName
export worktreesPath=$DEV1_WORKTREES_PATH
export repositoriesPath=$DEV1_REPOSITORIES_PATH
export builds=$DEV1_BUILDS_PATH
export runs=$DEV1_RUNS_PATH
export task=$DEV1_TASK_PATH
export project=$DEV1_PROJECT_PATH
export b=$builds
export t=$_taskPath
export p=$_projectPath
export w=$_worktreesPath
export r=$repositoriesPath
export suitePath=$DEV1_SUITE_PATH
export s=$_suiteName
echo "Suite Name:          $DEV1_SUITE_NAME"
echo "Task Name:           $DEV1_TASK_NAME"
echo "Code Workspace Path: $DEV1_CODE_WORKSPACE_PATH"
echo "CMake Build Type:    $DEV1_CMAKE_BUILD_TYPE"
echo "DEV1_CODE_WORKSPACE_PATH : $DEV1_CODE_WORKSPACE_PATH"
echo
echo DEV1_SUITES_PATH: "$DEV1_SUITES_PATH"
echo DEV1_TASK_PATH:   "$DEV1_TASK_PATH"
# ls $DEV1_SUITES_PATH
# ls $DEV1_TASK_PATH
echo "$DEV1_SUITE_NAME"            >"$DEV1_SUITES_PATH/current.suite.name"
echo "$DEV1_TASK_NAME"             >"$DEV1_PROJECT_PATH/current.task.name"
echo "$DEV1_CODE_WORKSPACE_PATH"   >"$DEV1_PROJECT_PATH/current.code.workspace.path"
echo "$DEV1_CMAKE_BUILD_TYPE"      >"$DEV1_PROJECT_PATH/current.cmake.build.type"

echo "--------------------- Context Complete ---------------------"
cd $_suitePath || return 1
