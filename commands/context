#!/bin/bash
# Todo - choose one of multiple code workspaces in a task with partial workspace name
# Todo - resolve multiple matches for partial workspace name
# Todo - Implement trace
# Todo - Simplify and save data in suiteDir.
# Suite, task and code workspace are required to start.
# where you get the values:
# If just suite is provided:
#   If the next previous run specified a task, use that one
#   If not, or if "?" present a list of tasks to choose from
# If Suite and task are known 
#     and the task contains only one,  use that one
#     if a previous code-workspace was used, use that
#     if not present or if "?" a list of code-workspaces to choose.  
if [[ ! "$DEV1_DEBUG" == "" ]]; then
  echo "starting $DEV1/commands/context $@"
  set -x
fi
function context_debug(){
   echo "Debug ${BASH_SOURCE[0]} $@ currentSuite: ${currentSuite} currentTask: ${currentTask} currentWorkspace: ${currentWorkspace}"
}
# validate and use wildcards
unset currentSuite
unset currentTask
unset currentWorkspace
if [[ ! "$1" == "--" ]]; then
  currentSuite="$1"
fi
if [[ ! "$2" == "--" ]]; then
  currentTask="$2"
fi
if [[ ! "$3" == "--" ]]; then
  currentWorkspace="$3"
fi
#--------------------------------------------------------
if [[ ! "$DEV1_DEBUG" == "" ]]; then context_debug 1; fi
#--------------------------------------------------------
if [[ "${currentWorkspace}" == "" && "${currentTask}" == "$DEV1_CURRENT_TASK" && "${currentSuite}"="$DEV1_CURRENT_SUITE" ]]; then
  currentWorkspace=$DEV1_CURRENT_PROJECT
fi
if [[ "${currentTask}" == "" &&  "${currentSuite}" == "$DEV1_CURRENT_SUITE" ]]; then
  currentTask=$DEV1_CURRENT_TASK
fi
if [[ "${currentSuite}" == "" ]]; then
  ${currentSuite}=$DEV1_CURRENT_SUITE
fi
#--------------------------------------------------------
if [[ ! "$DEV1_DEBUG" == "" ]]; then context_debug 2; fi
#--------------------------------------------------------
# parse pwd to determine if suite, task and CodeWorkspace are defined by the current directory 
# as a directory link, or as a code workspace
PWD=$(pwd)
suitepath=${PWD##${DEV1_SUITES}/}
if [[ ! "${suitepath}" == "$PWD" ]]; then
	pwd_suite=${suitepath%%/*}
	taskpath="${suitepath##${pwd_suite}/tasks/}"
	if [[ ! "$taskpath" == "$suitepath" ]]; then
		pwd_task="${taskpath%%/*}"
		if [[ ! -e $CodeWorkspacename ]]; then
		  pwd_CodeWorkspace=""
		else
			pwd_CodeWorkspace=$(cat CodeWorkspacename)
		fi
	fi
fi
#--------------------------------------------------------
if [[ ! "$DEV1_DEBUG" == "" ]]; then context_debug 3; fi
#--------------------------------------------------------
if [[ "${currentSuite}" == "" || ! ${currentSuite} == pwd_suite && ! $PWD_suite == "" ]]; then
  ${currentSuite}="$pwd_suite"
  currentTask="$pwd_task"
  currentWorkspace="$pwd_CodeWorkspace"
else
  if [[ -e last_suite ]]; then
    ${currentSuite}=$(cat last_suite)
	fi
fi
if [[ "${currentSuite}" == "" ]]; then
  ${currentSuite}=$(cat "$DEV1_USER_DATA/${currentSuite}")
fi
if [[ "${currentTask}" == "" ]]; then
  currentTask=$(cat "$DEV1_USER_DATA/${currentSuite}_task")
fi
if [[ "${currentTask}" == "" ]]; then
  currentWorkspace=$(cat "$DEV1_USER_DATA/${currentSuite}_${currentTask}_CodeWorkspace")
fi
#--------------------------------------------------------
if [[ ! "$DEV1_DEBUG" == "" ]]; then 
#--------------------------------------------------------
  echo "------------------------------"
  echo 'validate suite'
  echo "------------------------------"
  context_debug 4a;
fi
if [[ ! -d $DEV1_SUITES/${currentSuite} ]] then 
  compgen -G "$DEV1_SUITES/*${currentSuite}*" >/dev/null
  if [[ "$?" == "1" ]]; then
    ${currentSuite}=""$(compgen -G "$DEV1_SUITES/$currentSuite}*" >/dev/null
  )
  else
    possible_suites=$
  fi
  #---------------------------------------------------------------------------------------------
  if [[ ! "$DEV1_DEBUG" == "" ]]; then context_debug 5 "possible_suites: ${possible_suites}"; fi
  #---------------------------------------------------------------------------------------------

    if [[ "${#possible_suites[@]}" == "1" ]]; then
      ${currentSuite}="$(basename ${possible_suites[0]})"
    else
      i=1
      pad=" "
      for suite in ${possible_suites[@]}; do
        echo "$pad $i  $suite"
        if [[ "$i" -gt "10" ]]; then
          pad=""
        fi
      done
      while [[ "$selected" == "" ]]; do
        read selected
        if [[ "$selected" =~ ^[0-9]+$  && "$selected" -gt 0 && "$selected" -le "${#possible_suites[@]}" ]]; then
          suite=$(basename ${possible_suites[$selected]})
          return
        fi
        echo "Enter a number between 1 and ${#possible_suites[@]}"
      done
  fi 
fi

if [[ "${currentSuite}" == "" ]]; then
  return 1
fi
#--------------------------------------------------------
if [[ ! "$DEV1_DEBUG" == "" ]]; then context_debug 4b; fi
#--------------------------------------------------------


if [[ ! "$DEV1_DEBUG" == "" ]]; then
  echo "------------------------------"
  echo 'validate task'
  echo "------------------------------"
fi
if [[ ! -d $DEV1_SUITES/${currentSuite}/tasks/${currentTask} ]] then 

  compgen -G "$DEV1_SUITES/${currentSuite}/tasks/*${currentTask}*" >/dev/null
  if [[ $? == 1 ]]; then
    currentTask=""; return 1
  fi
  unset possible_tasks
  possible_tasks=$(compgen -G "$DEV1_SUITES/${currentSuite}/tasks/*${currentTask}*")


  #---------------------------------------------------------------------------------------------
  if [[ ! "$DEV1_DEBUG" == "" ]]; then context_debug 6 possible tasks: $possible_tasks; fi
 #---------------------------------------------------------------------------------------------
  if [[ "${#possible_tasks[@]}" == "1" ]]; then
    currentTask="$(basename ${possible_tasks[0]})"
  else
    i=1
    pad=" "
    for task in ${possible_tasks[@]}; do
      echo "$pad $i  suite: ${currentSuite} task: $task"
      if [[ "$i" -gt "10" ]]; then
        pad=""
      fi
    done
    while [[ "$selected" == "" ]]; do
      read selected
      if [[ "$selected" =~ ^[0-9]+$  && "$selected" -gt 0 && "$selected" -le "${#possible_tasks[@]}" ]]; then
        currentTask=$(basename ${possible_tasks[$selected]})
        return
      fi
      echo "Enter a number between 1 and ${#possible_tasks[@]}"
    done
  fi
fi

if [[ "${currentTask}" == "" ]]; then
  return 1
fi
#--------------------------------------------------------
if [[ ! "$DEV1_DEBUG" == "" ]]; then context_debug 4c; fi
#--------------------------------------------------------
export DEV1_SUITE="${currentSuite}"
export DEV1_TASK="${currentTask}"
export DEV1_CODE_WORKSPACE="${currentWorkspace}"

cd $DEV1_SUITES/${currentSuite}/tasks/${currentTask}

return 0
# A DEV1 command will set the process context variables for suite, task, and CodeWorkspace in that order.  For each of them, the source of the values can be 
# a parameter
# a process environment variable
# an element of the current directory path
# a last used value from DEV_USER_DATA

# Once the suite name is known,  task names for the suite can be enumerated. Then the current task is identified, and a list of CodeWorkspaces associated with the task can be listed. Once CodeWorkspace, task and suite are all identified, the context is established and used by all commands run in that process


# DEV1_CURRENT_CONTEXT:
# 	<suite-name>/<task-name>/<CodeWorkspace-name>
# DEV1_CURRENT_SUITE:
# DEV1_CURRENT_TASK:
# DEV1_CURRENT_CODE_WORKSPACE: