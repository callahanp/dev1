#!/bin/bash
#
# dev1
# Dev1's operations, ide, build and run depend on
# the settings for suite, task, code_workspace and variant
# Together, these four determine the values for a number of
# environment variables set at the end of
#
# ide requires suite, task & code-workspace names
# build requires suite, task, variant, build options/parameters
# run requires suite, task, variant, run options/parameters.
#

# Values for suite, task, code-workspace and variant are determined
# from
# - parameters given to commands
# - saved environment variable values


# shellcheck disable=SC1091
# shellcheck disable=SC2153
suitesPath=$DEV1_SUITES_PATH # provided by .bashrc
function resolveSuite(){
  suiteName=""
  mapfile -t foundExactSuite\
      < <(find "$suitesPath/"\
            -maxdepth 1 -type d -name "$1")
  mapfile -t foundWildcardSuite\
      < <(find "$suitesPath/"\
        -maxdepth 1 -type d -regex ".*$1.*"  -printf "%f\n")

  if [[ ${foundExactSuite[0]} != "" ]]; then
    suiteName=$(basename "${foundExactSuite[0]}")
  elif [[ "${#foundWildcardSuite[@]}" == "1" ]]; then
    suiteName=${foundWildcardSuite[0]}
    shift;
  elif [[ "${#foundWildcardSuite[@]}" == "0" ]]; then
    suiteName=""
  else
    echo ""
    echo " $1 matched more than one suite.  Please choose one by number:"
    echo ""
    for (( i=0; i<${#foundWildcardSuite[@]}; i++ )); do
      (( i++ ))
    done
    unset choice
    read -rp "choice: " choice
    choice=$(( choice - 1 ))
    suiteName="${foundWildcardSuite[$choice]}"
  fi
  if [[ "$suiteName" == "" ]]; then
    if [[ -e $suitesPath/current.suite.name ]]; then
    suiteName=$(cat <"$suitesPath/.current.suite.name")
    fi
  fi
  if [[ "$suiteName" != "" ]]; then
    echo "$suiteName" > "$DEV1_SUITES_PATH/.current.suite.name"
  fi
  if [[ "$suiteName" == "" ]]; then
    echo "Error: Unable to resolve Suite Name"
    return 1
  else
    resolvedContext['suiteName']="$suiteName"
    resolvedContext['suitePath']="$suitesPath/$suiteName"
  fi
  unset foundWildcardSuite
  unset foundExactSuite
  return 0
}
function resolveTask(){
set -x
  tasksPath="$suitePath/tasks"
  searchPath="$tasksPath/"
  taskName=""
  mapfile -t foundExactTask< <(find  "$searchPath"\
    -maxdepth 1 -name "$1" -printf "%f\n")
  mapfile -t foundWildcardTask < <(find "$searchPath" \
    -maxdepth 1 -regex ".*$1.*" -printf "%f\n")
  if [[ ${foundExactTask[0]} == "" && "${#foundWildcardTask[@]}" == "0" ]]; then
    taskName=""
  elif [[ ${foundExactTask[0]} != "" ]]; then
    taskName=$(basename "${foundExactTask[0]}")
  elif [[ "${#foundWildcardTask[@]}" == "1" ]]; then
    taskName=$(basename "${foundWildcardTask[0]}")
  else
    echo ""
    echo " $1 matched more than one task.  Please choose one by number:"
    echo ""
    for (( i=0; i<${#foundWildcardTask[@]}; i++ )); do
        j=$(( i+1 ))
        echo "$j ${foundWildcardTask[i]}"
    done
    unset choice
    read -rp "choice: " choice
    choice=$(( choice++ ))
    taskName="${foundWildcardTask[$choice]}"
  fi
  if [[ "$taskName" == "" && -e "$tasksPath/current.task.name" ]]; then
    taskName=$(cat <"$tasksPath/current.task.name")
  fi
  if [[ "$taskName" != "" ]]; then
    echo "$taskName" > "$tasksPath/current.task.name"
    resolvedContext['taskName']="$taskName"
    resolvedContext['taskPath']="$tasksPath/$taskName"
  fi
  unset foundWildcardTask
  unset foundExactTask
  set +x
}
function resolveCodeWorkspace(){
searchPath="$taskPath"
codeWorkspaceName=""

declare -a codeWorkspaceFiles
readarray -d '' codeWorkspaceFiles < <(find "$searchPath" -name '*.code-workspace' -print0)

if [[ "${#codeWorkspaceFiles[@]}" == 1 ]]; then
  codeWorkspaceName=$(basename "${codeWorkspaceFiles[0]}")
else
    mapfile -t foundExactCodeWorkspace< <(find "$searchPath"\
      -maxdepth 1 -name "$1.code-workspace" -printf "h/%f\n")
    mapfile -t foundWildcardCodeWorkspace < <(find "$searchPath" \
      -maxdepth 1 -regex ".*$1.*[.]code-workspace" -printf "%h/%f\n")
    if [[ ${foundExactCodeWorkspace[0]} == "" ]]; then
      codeWorkspaceName=""
    elif [[ ${foundExactCodeWorkspace[0]} != "" ]]; then
      codeWorkspaceName=$(basename "${foundExactCodeWorkspace[0]}")
    elif [[ "${#foundWildcardCodeWorkspace[@]}" == "1" ]]; then
      codeWorkspaceName=$(basename "${foundWildcardCodeWorkspace[0]}")

    else
      echo ""
      echo " $1 matched more than one .code-workspace file.  Please choose one by number:"
      echo ""
      for (( i=0; i<${#foundWildcardCodeWorkspace[@]}; i++ )); do
          j=$(( i+1 ))
          echo "$j ${foundWildcardCodeWorkspace[i]}"
      done
      unset choice
      read -rp "choice: " choice
      choice=$(( choice - 1 ))
      echo "choice: $choice"
      codeWorkspaceName="${foundWildcardCodeWorkspace[$choice]}"
    fi
  fi
  if [[ "$codeWorkspaceName" == "" ]]; then
    if [[ -e "$taskPath/current.codeWorkspace.name" ]]; then
      codeWorkspaceName="$(cat "$taskPath/current.codeWorkspace.name")"
    fi
  fi
  resolvedContext['code-workspace']="$codeWorkspaceName"
  resolvedContext['codeWorkspacePath']="$taskPath/$codeWorkspaceName.code-workspace"

}

function resolveVariant(){

  variants=("Release" "Debug" "RelWithDebInfo" "MinSizeRel")
  # shellcheck disable=SC2206
  lowerCaseVariants=(${variants[@],,})
  v=$1; v=${v,,}
  if [[ "$v" != "" ]]; then
    for (( iv=0; iv<${#variants[@]}; iv++ )); do
      if [[ "$v" == "${lowerCaseVariants[$iv]}" ]]; then
        resolvedContext['variant']="${variants[$iv]}"
      fi
    done
  fi
  return 0
}
#echo "--------------------- Starting Context ---------------------"
if [[ "$DEV1_DEBUG" != "" ]]; then
  echo "starting $DEV1_COMMANDS_PATH/context " "$@"
fi

declare -Ag resolvedContext

resolvedContext['suiteName']=""
resolvedContext['taskName']=""
resolvedContext['code-workspace']=""
resolvedContext['variant']=""

declare -a inputs
inputs=("$@")
for (( ii=0; ii<${#inputs[@]}; ii++ )); do
  if [[ "${inputs[$ii]}" == "--" ]]; then
    (( ii=${#inputs[@]} ))
  else
    if [[ "${resolvedContext['taskName']}" != "" \
        && "${resolvedContext['variant']}" == "" ]]; then
      resolveVariant "${inputs[$ii]}"
    fi
    if [[ "${resolvedContext['suiteName']}" == "" ]]; then
      resolveSuite "${inputs[$ii]}"
      if [[ "$?" == "1" ]]; then return 1; fi
      suitePath="${resolvedContext['suitePath']}"
    elif [[ "${resolvedContext['taskName']}" == "" ]]; then
      resolveTask "${inputs[$ii]}"
      if [[ "$?" == "1" ]]; then return 1; fi
      taskPath="${resolvedContext['taskPath']}"
    elif [[ "${resolvedContext['code-workspace']}" == "" ]]; then
      resolveCodeWorkspace "${inputs[$ii]}"
      if [[ "$?" == "1" ]]; then return 1; fi
    fi
  fi
done
resolvedContext['buildPath']="${resolvedContext['suitePath']}"/builds/${resolvedContext['taskName']}"/${resolvedContext['variant']}"

echo "resolvedContext['buildPath'] ${resolvedContext['buildPath']}"
export resolvedContext

export DEV1_SUITE_NAME="${resolvedContext['suiteName']}"
export DEV1_SUITE_PATH="${resolvedContext['suitePath']}"
export DEV1_TASK_NAME="${resolvedContext['taskName']}"
export DEV1_TASK_PATH="${resolvedContext['taskPath']}"
export DEV1_CODE_WORKSPACE_NAME="${resolvedContext['code-workspace']}"
export DEV1_CODE_WORKSPACE_PATH="${resolvedContext['codeWorkspacePath']}"
export DEV1_VARIANT_NAME="${resolvedContext['variant']}"
export DEV1_BUILDS_PATH="$DEV1_SUITE_PATH/builds"
export DEV1_WORKTREES_PATH="$DEV1_SUITE_PATH/worktrees"
export DEV1_REPOSITORIES_PATH="$DEV1_SUITE_PATH/repositories"
export DEV1_RUNS_PATH="$DEV1_SUITE_PATH/runs"
export DEV1_TASKS_PATH="$DEV1_SUITE_PATH/tasks"
export DEV1_PROJECT_PATH="$DEV1_SUITE_PATH/project"

export DEV1_BUILD_PATH=$DEV1_BUILDS_PATH/$DEV1_TASK_NAME/$DEV1_VARIANT_NAME
export DEV1_TASK_PATH=$DEV1_TASKS_PATH/$taskName
export worktrees=$DEV1_WORKTREES_PATH
export repositories=$DEV1_REPOSITORIES_PATH
export builds=$DEV1_BUILDS_PATH
export runs=$DEV1_RUNS_PATH
export task=$DEV1_TASK_PATH
export project=$DEV1_PROJECT_PATH


echo "--------------------- Context Complete ---------------------"

