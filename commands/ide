#!/bin/bash

# run visual studio code for the project

# Errors:
#   - Environment not set for DEV1
#   - Project not found among the suites
#   - Project code workspace not found
# Parameter sets:
# no-parameters: use previous task
# set -x #uncomment to debug

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then RETURN_OR_EXIT="exit"; else RETURN_OR_EXIT="return"; fi

if [[ ! "$DEV1_DEBUG" == "" ]]; then
  echo "starting $DEV1/commands/ide $*"
  set -x
fi
# shellcheck source="$DEV1_COMMANDS_PATH/context"
source "$DEV1_COMMANDS_PATH/context" "ide" "$1" "$2" "$3"
if [[ "$?" == "1" ]]; then 
  if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then exit ${returnCode}; 
  else  ${RETURN_OR_EXIT}
  fi
fi
if [[ "$1" == "--" || "$2" == "--"  || "$3" == "--" || "$4" == "--" ]]; then
  while [[ ! "$1" == "--" ]]; do
    shift  # shift options before the --
  done
  shift    # shift the --
fi
if [[ "${currentTask}" == "" \
   && -e ${DEV1_SUITES_PATH}/${currentSuite}/repositories/${currentSuite} ]]; then
   cd "${DEV1_SUITES_PATH}/${currentSuite}/repositories/${currentSuite}" \
   ||  ${RETURN_OR_EXIT}
fi
echo "$(basename ${BASH_SOURCE[0]}) " "$*"
echo "cd $(pwd)"
if [[ -e ${currentTask}.code-workspace ]]; then
  echo "code ${currentTask}.code-workspace"
  code "${currentTask}.code-workspace"
elif [[ -e ${currentSuite}.code-workspace ]]; then 
  echo "code ${currentSuite}.code-workspace"
  code "${currentSuite}.code-workspace"
else
  echo "code ."
  code .
fi
if [[ ! "$DEV1_DEBUG" == "" ]]; then
  echo "ending   $DEV1/commands/run $*"
  set +x
fi