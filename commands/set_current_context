# this file must be sourced
#
# if [[ "$1" == "--show" ]]; then
#   show=0
#   shift 1
# fi
if [[ ! "$DEV1_DEBUG" == "" ]]; then
  echo "start $DEV1_COMMANDS/set_current_context"
  set -x
fi
# Determine the number of context params before any options to be passed
arg1="$1"
arg2="$2"
arg1c1=${arg1:0:1}
arg2c1=${arg2:0:1}
echo $arg1c1 $arg2c1
if [[ "$arg1c1" == "-" ]];then
  params=0 
elif [[  "$arg2c1" == "-" ]];then
  params=1  
else
  params=$(echo "$1 $2 $3" |wc -w)
fi
# Determine what the current suite is
current_suite_file=$DEV1_USER_DATA/current_suite
if [[ "$params" == "0" ]]; then 
  export current_suite=$(cat $current_suite_file)
  if [[ -e $DEV1_USER_DATA/${current_suite}_task ]]; then
    export current_task=$(basename $(cat $DEV1_USER_DATA/${current_suite}_task))
  else
    export current_task="" 
  fi
fi
if [[ "$params" == "1" ]]; then 
  export current_suite="$1"
  current_task_file=$DEV1_USER_DATA/${current_suite}_task
  if [[ ! -e $current_task_file ]]; then
    echo "next" > $current_task_file
  fi
  export current_task=$(basename $(cat $current_task_file))
  echo $current_task
fi
# if a second parameter was provided, it might be a wildcard for an existing task. (no asterisk needed)
if [[ "$params" == "2" ]]; then 
  export current_suite="$1"
  export current_task="$2"
  wildcard_task="$(ls -1d $DEV1_SUITES/${current_suite}/tasks/${current_task}* 2>/dev/null)"
  matching_tasks="$(echo $wildcard_task|wc -l)"
  if [[ -d $DEV1_SUITES/${current_suite}/tasks/$current_task ]]; then
    echo $current_task >$DEV1_USER_DATA/${current_suite}_task
    cd $DEV1_SUITES/${current_suite}/tasks/${current_task}
  elif [[ $matching_tasks == "1" ]]; then # it's either the actual task or the param matched exactly one task
    export current_task=$(basename $wildcard_task)
    echo $current_task >$DEV1_USER_DATA/${current_suite}_task
    cd $DEV1_SUITES/${current_suite}/tasks/$current_task
  else 
    echo Error in $DEV1_SUITES/${current_suite}/tasks
  fi
fi
if [[ "$matching_tasks" == "0" ]]; then
    echo ""
    read -p 'did you want a new task?ls [y/n]' -n 1 -r
    echo ""
    if [[ "$REPLY" =~ ^[Nn]$ ]]; then
      return
    fi
fi
# save the current context params for use as defaults
echo $current_suite >$DEV1_USER_DATA/current_suite
echo $current_task >$DEV1_USER_DATA/${current_suite}_task

if [[ ! "$DEV1_DEBUG" == "" ]]; then
  echo "end   $DEV1_COMMANDS/set_current_context"
  set +x
fi
